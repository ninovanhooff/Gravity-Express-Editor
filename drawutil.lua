---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 15/05/2022 18:32
---

local floor = math.floor
local gfx  = love.graphics

black = {0,0,0} -- rgb
white = {1,1,1} -- rgb
semiWhite = {1, 1, 1, 0.5}
yellow = {1,1,0} -- rgb
purple = {1,0,1} -- rgb
red = {1,0,0, 0.5} -- rgba

local quadCache = {}
function drawSprite(x,y,_,srcX,srcY,w,h)
    local cacheKey = "" .. srcX .. srcY .. w ..h
    local quad = quadCache[cacheKey]
    if not quad then
        quad = gfx.newQuad(srcX, srcY, w, h, sprite:getWidth(), sprite:getHeight())
        quadCache[cacheKey] = quad
    end
    gfx.draw(sprite, quad, x, y)
end

function loadSprite(name)
    sprite = love.graphics.newImage("images/" .. name)
    quadCache = {}
    spriteName = name
end

function curXScreen()
    return (curX - camPos[1]) * tileSize
end

function curYScreen()
    return (curY - camPos[2]) * tileSize
end

function drawBrush()
    -- Defining a table with the coordinates.
    -- This table could be built incrementally too.
    local vertices = {}
    local curXScreen = curXScreen()
    local curYScreen = curYScreen()
    for i,item in ipairs(brushVerts) do
        if i<#brushVerts then -- polygon should NOT be closed, so ignore the last, closing vertex
            -- [1]: color, [2]: x, [3]: y
            table.insert(vertices, item[2] + curXScreen)
            table.insert(vertices, item[3] + curYScreen)
        end
    end

    -- Passing the table to the function as a second argument.
    love.graphics.polygon("line", vertices)
end

function pgeDrawRectoutline(x, y, w, h, color)
    gfx.setColor(color)
    gfx.rectangle("line", x, y, w, h)
    gfx.setColor(white)
end

function fillRect(x, y, w, h, color)
    gfx.setColor(color)
    gfx.rectangle("fill", x, y, w, h)
    gfx.setColor(white)
end

function loopAnim(frames,skip)
    return floor((frameCounter % (frames*skip))*(1/skip))
end
