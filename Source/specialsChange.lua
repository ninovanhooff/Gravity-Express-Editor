---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 19/08/2022 14:15
---

function DefChange(list,menuSel,SOidx)
    if list[menuSel][1]=="direction" then
        local prev = specialT[SOidx][list[menuSel][1]]<3; local after = list[menuSel].val<3
        if prev~=after then -- one vert and the other horiz
            specialT[SOidx].w,specialT[SOidx].h = specialT[SOidx].h,specialT[SOidx].w -- swap w/h
        end
    end
    specialT[SOidx][list[menuSel][1]] = list[menuSel].val
    return list
end

function PltfrmChange(list,menuSel,SOidx)
    printf("change",menuSel,list[menuSel][1],SOidx)
    printf(list[menuSel],SOidx)
    printf(specialT[SOidx],list[menuSel].val)
    specialT[SOidx][list[menuSel][1]] = list[menuSel].val
    if menuSel==3 then -- change pltfrmtype
        while #list>4 do
            specialT[SOidx][list[#list][1]]=nil
            table.remove(list)
        end
        specialT[SOidx].amnt = 0 -- for home base
        for i,item in ipairs(pltfrmDefs[list[menuSel].val]) do
            specialT[SOidx][item[1]] = item.val
            table.insert(list,deepcopy(item))
        end
    end
    return list
end

function BlowerChange(list,menuSel,SOidx)
    list = DefChange(list,menuSel,SOidx)
    local item = specialT[SOidx]
    if item.direction>2 then -- horiz
        item.w = 8+item.distance
        item.h = 6
    else
        item.w = 6
        item.h = 8+item.distance
    end
    return list
end

function MagnetChange(list,menuSel,SOidx)
    list = DefChange(list,menuSel,SOidx)
    local item = specialT[SOidx]
    if item.direction>2 then -- horiz
        item.w = 6+item.distance
        item.h = 4
    else
        item.w = 4
        item.h = 6+item.distance
    end
    return list
end

function RotatorChange(list,menuSel,SOidx)
    list = DefChange(list,menuSel,SOidx)
    local item = specialT[SOidx]
    if item.direction>2 then -- horiz
        item.w = 8+item.distance
        item.h = 5
    else
        item.w = 5
        item.h = 8+item.distance
    end
    return list
end

function CannonChange(list,menuSel,SOidx)
    list = DefChange(list,menuSel,SOidx)
    local item = specialT[SOidx]
    if item.direction>2 then -- horiz
        item.w = 5+item.distance
        item.h = 3
    else
        item.w = 3
        item.h = 5+item.distance
    end
    return list
end

function RodChange(list,menuSel,SOidx)
    list = DefChange(list,menuSel,SOidx)
    local item = specialT[SOidx]
    if item.direction==1 then -- horiz
        item.w = 3+item.distance
        item.h = 3
    else
        item.w = 3
        item.h = 3+item.distance
    end
    return list
end

function OneWayChange(list,menuSel,SOidx)
    specialT[SOidx][list[menuSel][1]] = list[menuSel].val
    if list[menuSel][1]=="distance" or list[menuSel][1]=="endStone" then
        local item = specialT[SOidx]
        item.pos=item.distance*8-boolToNum(item.endStone==1)*16-4
    end
    local item = specialT[SOidx]
    if item.direction<3 then -- vert
        item.w = 12
        item.h = 4+item.distance
    else
        item.h = 12
        item.w = 4+item.distance
    end
    return list
end

function BarrierChange(list,menuSel,SOidx)
    specialT[SOidx][list[menuSel][1]] = list[menuSel].val
    if list[menuSel][1]=="distance" or list[menuSel][1]=="endStone" then
        local item = specialT[SOidx]
        item.pos=item.distance*8-boolToNum(item.endStone==1)*16-4
    end
    local item = specialT[SOidx]
    if item.direction<3 then -- vert
        item.w = 6
        item.h = 4+item.distance
    else
        item.h = 6
        item.w = 4+item.distance
    end
    return list
end

function levelPropChange(list,menuSel)
    levelProps[list[menuSel][1]] = list[menuSel].val
    return list
end

changeFuncs = {PltfrmChange,BlowerChange,MagnetChange,RotatorChange,CannonChange,RodChange,OneWayChange,BarrierChange}
