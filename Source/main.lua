---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 13/05/2022 16:58
---

lume = require "lume"

-- Name without extension
require("object")
require("cglBrickReader")
require("util")
require("drawutil")
require("specialsView")
require("specialsRepair")
require("specialsChange")
require("brush")
require("levelGenerator")
require("EditorModel")
require("EditorView")
require("EditorViewModel")
require("MenuView")
require("MenuViewModel")
require("dataUtil")
require("serialize")

Debug = false

--- width/height in pixels of a single Gravity Express tile
tileSize = 8
gfxEnabled = true -- when false, no image displayed, but written to file. Useful for commandline-usage
editorMode = true
condenseEnabled = false
curX, curY = 1,1
luaLevelDir = "levels/"


camPos = {1,1,0,0}

local editorViewModel, menuViewModel, menuView

function inspect(tbl)
    for i,item in pairs(tbl) do
        print(i,item)
    end
end

function table.sum(tbl)
    local sum = 0
    for _,item in pairs(tbl) do
        sum = sum + item
    end
    return sum
end

function love.draw()
    drawEditor(editorViewModel)

    if menuView then
        menuView:draw()
    end
end

function love.load(args)
    love.filesystem.setIdentity( "GravityExpressEditor" )
    success = love.filesystem.createDirectory( luaLevelDir )
    assert(success, "Could not create lua levels dir")
    love.keyboard.setKeyRepeat( true )
    loadSprite("sprite_color.png")
    print("sprite", sprite)
    frameCounter = 0

    local fileName = args[1]
    print("Filename", fileName)
    if not fileName then
        print("WARNING - fileName argument not provided, using MyLevel")
        fileName = "MyLevel"
    end

    -- READ INPUT FILE from args
    if args[2] == "convert" then
        convertLevel(fileName)
        love.event.quit()
    elseif love.filesystem.getInfo(luaLevelDir .. fileName .. ".lua") then
        readLuaLevel(fileName)
    else
        print("Creating new level")
        generateLevel(60,60)
    end

    local displayIdx = 1
    love.window.setMode(levelProps.sizeX*tileSize+sideBarWidth,levelProps.sizeY*tileSize+bottomBarHeight,
        {
            display=displayIdx, resizable = true, x=1, y=1,
            minwidth=math.max(sideBarWidth*2, bottomBarWidth),
            minheight = math.max(sideBarHeight, 224 + bottomBarHeight) -- playdate visible game view height
        }
    )
    love.window.setPosition(20,20, displayIdx)
    love.window.setTitle( "Gravity Express Editor | " .. fileName )

    InitEditor()
    editorViewModel = EditorViewModel(fileName)

end

function love.update(dt)
    local targetFrameTime = 1/30

    love.mouse.setVisible(not menuView) -- menus don't support he mouse
    if not menuViewModel then
        menuViewModel = editorViewModel:update()
        if menuViewModel then
            menuView = MenuView(menuViewModel)
        end
    elseif menuViewModel.isFinished then
        menuViewModel = nil
        menuView = nil
    end

    if dt < targetFrameTime then
        love.timer.sleep(targetFrameTime - dt)
    end
end

function love.keypressed(key)
    if menuViewModel then
        menuViewModel:keypressed(key)
    else
        editorViewModel:keypressed(key)
    end
end

function love.wheelmoved(x, y)
    editorViewModel:wheelMoved(x,y)
end
